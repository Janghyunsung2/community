name: CI/CD for Spring Boot with Docker

on:
  push:
    branches:
      - main  # main 브랜치에 Push될 때 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          ssh ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
          
          # 1. 필수 패키지 업데이트 및 Docker 설치 확인
          sudo yum update -y
          sudo yum install -y git docker
          sudo systemctl start docker
          sudo systemctl enable docker

          # 2. Git Clone (SSH 방식으로 변경!)
          cd /home/ec2-user || exit
          
          if [ ! -d "app" ]; then
            git clone git@github.com:YOUR_GITHUB_USERNAME/YOUR_REPO.git app
          fi
          
          cd app
          git checkout main
          git pull origin main

          # 3. Maven 빌드
          chmod +x mvnw
          ./mvnw clean package -DskipTests

          # 4. 기존 Docker 컨테이너 중지 및 삭제
          sudo docker stop backend-container || true
          sudo docker rm backend-container || true
          sudo docker rmi my-backend-image || true

          # 5. Docker 이미지 빌드
          sudo docker build -t my-backend-image .

          # 6. 새 컨테이너 실행
          sudo docker run -d --name backend-container -p 8080:8080 \
            -e DB_URL=${{ secrets.DB_URL }} \
            -e DB_USERNAME=${{ secrets.DB_USERNAME }} \
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
            -e SPRING_MAIL_HOST=${{ secrets.SPRING_MAIL_HOST }} \
            -e SPRING_MAIL_PORT=${{ secrets.SPRING_MAIL_PORT }} \
            -e SPRING_MAIL_USERNAME=${{ secrets.SPRING_MAIL_USERNAME }} \
            -e SPRING_MAIL_PASSWORD=${{ secrets.SPRING_MAIL_PASSWORD }} \
            my-backend-image

          EOF
